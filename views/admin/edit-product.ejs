<%- include("../../views/partials/admin/header") %>
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }

       .thumbnail {
           margin-right: 10px;
       }

       .input-upload {
           position: relative;
       }

       .error-message {
           color: red;
           display: none;
       }
   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<section class="content-main">
   <div class="row">
       <div class="col-9">
           <div class="content-header">
               <h2 class="content-title">Edit Product</h2>
           </div>
       </div>
       <div class="col-lg-6">
           <div class="card mb-4">
               <div class="card-body">
                   <form action="/admin/editProduct/<%= product._id %>" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
                       <div class="mb-4">
                           <label for="product_name" class="form-label">Product Name</label>
                           <input type="text" name="productName" value="<%= product.productName %>" class="form-control border" id="product_name">
                           <div id="productName-error" class="error-message"></div>
                       </div>
                       <div class="col-lg-4 mb-4">
                           <label class="form-label">Brand</label>
                           <select class="form-select border" name="brand">
                            <%for(let i=0;i<brand.length;i++){%>
                                <option value="<%=brand[i].brandName%>">
                                 <%=brand[i].brandName%>
                                </option>
                               <%}%>
                           </select>
                           <div id="brand-error" class="error-message"></div>
                       </div>
                       <div class="mb-4">
                           <label class="form-label">Full description</label>
                           <input name="descriptionData" value="<%= product.description %>" class="form-control border" rows="4">
                           <div id="description-error" class="error-message"></div>
                       </div>
                       <div class="row">
                           <div class="col-lg-4">
                               <div class="mb-4">
                                   <label class="form-label">Regular price</label>
                                   <input placeholder="$" name="regularPrice" type="text" value="<%= product.regularPrice %>" class="form-control border">
                                   <div id="regularPrice-error" class="error-message"></div>
                               </div>
                           </div>
                           <div class="col-lg-4">
                               <div class="mb-4">
                                   <label class="form-label">Sale price</label>
                                   <input name="salePrice" type="text" value="<%= product.salePrice %>" class="form-control border">
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                           </div>
                           <div class="col-lg-4">
                               <div class="mb-4">
                                   <label class="form-label">Quantity</label>
                                   <input name="quantity" type="text" value="<%= product.quantity %>" class="form-control border">
                                   <div id="quantity-error" class="error-message"></div>
                               </div>
                           </div>
                       </div>
                       <div class="row">
                           <div class="col-lg-4">
                               <div class="mb-4">
                                   <label class="form-label">Color</label>
                                   <input name="color" type="text" value="<%= product.color %>" class="form-control border">
                                   <div id="color-error" class="error-message"></div>
                               </div>
                           </div>
                       </div>
                       <div class="card mb-4">
                           <div class="card-body">
                               <div class="row gx-2">
                                <div class="col-lg-4 mb-3">
                                    <label class="form-label">Category</label>
                                    <select class="form-select border" style="width: 150px;" name="category">
                                        <% for(let i=0;i<brand.length;i++){%>
                                            <option value="<%=brand[i]._id%>"> <!-- Use ObjectId here -->
                                                <%=brand[i].brandName%>
                                            </option>
                                        <%}%>
                                    </select>
                                    <div id="category-error" class="error-message"></div>
                                </div>
                               </div>
                           </div>
                       </div>
                       <div class="card mb-2">
                           <div class="card-header">
                               <h4>Choose images</h4>
                           </div>
                            <% for (let i = 0; i < product.productImage.length; i++) { %>  
                               <div class="col-md-12">
                                   <div class="mb-4">
                                       <div class="col-12">
                                           <input type="hidden" value="<%= product.productImage[i] %>" id="imageDatas">
                                           <img class="rounded" style="width: 50px; height: 60px;" src="/uploads/product-images/<%= product.productImage[i] %>" alt="">
                                           <i onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" style="position: absolute; margin-left: .5rem; cursor: pointer;" class="fa-thin fa-x"></i>
                                       </div>
                                   </div>
                               </div>
                            <% } %>
                           <div class="card-body">
                               <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                   <img src="" alt="" id="imgView1">
                                   <input class="form-control" type="file" name="images" id="input1" accept="image/png, image/jpeg, image/jpg" onchange="viewImage1(event), viewImage(event, 1)">
                                   <div id="images-error" class="error-message"></div>
                               </div>
                               <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                   <img src="" id="croppedImg1" alt="">
                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView2">
                                       <input class="form-control" type="file" name="images" id="input2" accept="image/png, image/jpeg, image/jpg" onchange="viewImage2(event),viewImage(event, 2)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg2" alt="">
                                       <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView3">
                                       <input class="form-control" type="file" name="images" id="input3" accept="image/png, image/jpeg, image/jpg" onchange="viewImage3(event),viewImage(event, 3)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg3" alt="">
                                       <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                               <div class="row">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView4">
                                       <input class="form-control" type="file" name="images" id="input4" accept="image/png, image/jpeg, image/jpg" onchange="viewImage4(event),viewImage(event, 4)">
                                   </div>
                                   <div class="image-cropper d-flex align-items-center" style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                       <img src="" id="croppedImg4" alt="">
                                       <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                   </div>
                               </div>
                           </div>
                       </div>
                       <div class="d-grid">
                           <button class="btn btn-primary" type="submit">Update product</button>
                       </div>
                   </form>
               </div>
           </div>
       </div>
   </div>
</section>
<%- include("../../views/partials/admin/footer") %>
<script src="https://cdn.jsdelivr.net/npm/cropperjs"></script>



<script>


//    function viewImage1(event) {
//        var output = document.getElementById('imgView1');
//        output.src = URL.createObjectURL(event.target.files[0]);
//        output.onload = function() {
//            URL.revokeObjectURL(output.src);
//        }
//    }
   
//    function viewImage(event, index) {
//        var cropper;
//        var input = document.getElementById('input' + index);
//        var imageView = document.getElementById('imgView' + index);
//        var croppedImageView = document.getElementById('croppedImg' + index);
//        var saveButton = document.getElementById('saveButton' + index);
//        imageView.src = URL.createObjectURL(event.target.files[0]);
//        imageView.onload = function() {
//            URL.revokeObjectURL(imageView.src);
//            document.querySelector('.image-cropper').style.display = 'block';
//            cropper = new Cropper(imageView, {
//                aspectRatio: 1,
//                viewMode: 1,
//                preview: croppedImageView
//            });
//        };
//        saveButton.addEventListener('click', function() {
//            var croppedCanvas = cropper.getCroppedCanvas();
//            croppedImageView.src = croppedCanvas.toDataURL();
//            document.querySelector('.image-cropper').style.display = 'none';
//        });
//    }
function validateAndSubmit() {
        if (validateForm()) {
            document.forms[0].submit();
        }
    }
    
    
    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementById('descriptionid').value;
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const salePrice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const quantity = document.getElementsByName('quantity')[0].value;
        const images = document.getElementById('input1').files;

        let isValid = true;

        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description.trim() === "") {
            displayErrorMessage('description-error', 'Please enter a description.');
            isValid = false;
        }

        if (brand.trim() === "") {
            displayErrorMessage('brand-error', 'Please select a brand.');
            isValid = false;
        }

        if (price.trim() === "") {
            displayErrorMessage('regularPrice-error', 'Please enter a regular price.');
            isValid = false;
        } else if (isNaN(price)) {
            displayErrorMessage('regularPrice-error', 'Regular price should be a numeric value.');
            isValid = false;
        }

        if (salePrice.trim() !== "" && isNaN(salePrice)) {
            displayErrorMessage('salePrice-error', 'Sale price should be a numeric value.');
            isValid = false;
        }

        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(color.trim())) {
            displayErrorMessage('color-error', 'Color should contain only alphabetic characters.');
            isValid = false;
        }

        if (category.trim() === "") {
            displayErrorMessage('category-error', 'Please select a category.');
            isValid = false;
        }

        if (quantity.trim() === "") {
            displayErrorMessage('quantity-error', 'Please enter a quantity.');
            isValid = false;
        } else if (isNaN(quantity)) {
            displayErrorMessage('quantity-error', 'Quantity should be a numeric value.');
            isValid = false;
        }

        if (images.length === 0) {
            displayErrorMessage('images-error', 'Please upload at least one image.');
            isValid = false;
        }

        return isValid;
    }





          
           function displayErrorMessage(elementId, message) {
               var errorElement = document.getElementById(elementId);
               errorElement.innerText = message;
               errorElement.style.display = "block";
           }
    
    
           function clearErrorMessages() {
               const errorElements = document.getElementsByClassName('error-message');
               Array.from(errorElements).forEach(element => {
                   element.innerText = '';
               });
               const errorMessage = document.getElementById('errorMessage');
    
    
           }
   
           function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage4(event) {
               document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
           }
        
    
        //    function viewImage(event, index) {
        //        let input = event.target;
        //        let reader = new FileReader();
        //        reader.onload = function () {
        //            let dataURL = reader.result;
        //            let image = document.getElementById('imgView' + index);
        //            image.src = dataURL;
        //            let cropper = new Cropper(image, {
        //                aspectRatio: 1,
        //                viewMode: 1,
        //                guides: true,
        //                background: false,
        //                autoCropArea: 1,
        //                zoomable: true
        //            });
        //            let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
        //            cropperContainer.style.display = 'block';
        //            let saveButton = document.querySelector('#saveButton' + index);
        //            saveButton.addEventListener('click', async function () {
        //                let croppedCanvas = cropper.getCroppedCanvas();
        //                let croppedImage = document.getElementById("croppedImg" + index);
        //                croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
        //                let timestamp = new Date().getTime();
        //                let fileName = cropped-img-${timestamp}-${index}.png;
        //                await croppedCanvas.toBlob(blob => {
        //                    let input = document.getElementById('input' + index);
        //                    let imgFile = new File([blob], fileName, blob)
        //                    const fileList = new DataTransfer();
        //                    fileList.items.add(imgFile);
        //                    input.files = fileList.files
        //                });
        //                cropperContainer.style.display = 'none';
        //            });
        //        };
        //        reader.readAsDataURL(input.files[0]);
        //    }
        function viewImage(event, index) {
       var cropper;
       var input = document.getElementById('input' + index);
       var imageView = document.getElementById('imgView' + index);
       var croppedImageView = document.getElementById('croppedImg' + index);
       var saveButton = document.getElementById('saveButton' + index);
       imageView.src = URL.createObjectURL(event.target.files[0]);
       imageView.onload = function() {
           URL.revokeObjectURL(imageView.src);
           document.querySelector('.image-cropper').style.display = 'block';
           cropper = new Cropper(imageView, {
               aspectRatio: 1,
               viewMode: 1,
               preview: croppedImageView
           });
       };
       saveButton.addEventListener('click', function() {
           var croppedCanvas = cropper.getCroppedCanvas();
           croppedImageView.src = croppedCanvas.toDataURL();
           document.querySelector('.image-cropper').style.display = 'none';
       });
   }
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
       function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };


           
           function deleteSingleImage(imageName, productId) {
    // Create an object with the imageName and productId
    const data = {
        imageNameToServer: imageName,
        productIdToserver: productId
    };

    // Send an AJAX POST request to the backend
    fetch('/admin/deleteImage', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => response.json())
    .then(result => {
        if (result.status) {
            // Successfully deleted the image
            // Remove the image element from the DOM
            document.querySelector(img[src="/uploads/product-images/${imageName}"]).parentElement.parentElement.remove();
        } else {
            // Handle the error (for example, show an alert)
            alert('Error deleting image.');
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

</script>