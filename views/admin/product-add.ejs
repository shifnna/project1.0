<%- include("../../views/partials/admin/header") %>
<head>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
<style>
   .error-message {
       color: red;
   }

   .thumbnails-container {
       display: flex;
       overflow-x: auto;
   }

   .thumbnail {
       margin-right: 10px;
       position: relative;
   }

   .remove-icon {
       position: absolute;
       top: 5px;
       right: 5px;
       background-color: rgba(255, 255, 255, 0.8);
       cursor: pointer;
       font-size: 16px;
       padding: 2px 5px;
       border-radius: 50%;
   }

   .image-cropper {
       display: flex;
       justify-content: center;
       margin-bottom: 20px;
   }

</style>
<section class="content-main">
    <div class="row">
        <div class="col-9">
            <div class="content-header">
                <h2 class="content-title">Add New Product</h2>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="card mb-4">
                <div class="card-body">
                    <form method="POST" action="/admin/editProduct/product._id" enctype="multipart/form-data" onsubmit="return validateForm()">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Type here" name="productName" class="form-control border" id="product_name">
                            <div id="productName-error" class="error-message"></div>
                        </div>
                        <div class="col-lg-4 mb-4">
                            <label class="form-label">Brand</label>
                            <select class="form-select border" name="brand">
                                <% for(let i=0; i<brand.length; i++) { %>
                                    <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                                <% } %>
                            </select>
                            <div id="brand-error" class="error-message"></div>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">Full description</label>
                            <textarea placeholder="Type here" id="descriptionid" name="description" class="form-control border" rows="4"></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Regular price</label>
                                    <input placeholder="$" name="regularPrice" type="text" class="form-control border">
                                    <div id="regularPrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Sale price</label>
                                    <input placeholder="$" name="salePrice" type="text" class="form-control border">
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Quantity</label>
                                    <input placeholder="" name="quantity" type="text" class="form-control border">
                                    <div id="quantity-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" class="form-control border">
                                    <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4">
                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" name="category">
                                            <% for(let i=0; i<cat.length; i++) { %>
                                                <option value="<%= cat[i].name %>"><%= cat[i].name %></option>
                                            <% } %>
                                        </select>
                                        <div id="category-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-2">
                            <div class="card-header">
                                <h4>Choose images</h4>
                            </div>
                            <div class="border row">
                                <div id="addedImagesContainer" class="thumbnails-container"></div>
                            </div>
                            <div class="row">
                                <% for (let i = 1; i <= 4; i++) { %>
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView<%= i %>">
                                        <input class="form-control" type="file" name="images" id="input<%= i %>" accept="image/png, image/jpeg, image/jpg" onchange="viewImage(event, `<%= i %>`)">
                                        <div id="images-error" class="error-message"></div>
                                    </div>
                                    <div class="image-cropper d-flex align-items-center" style="display:none;">
                                        <img src="" id="croppedImg<%= i %>" alt="">
                                        <button type="button" id="saveButton<%= i %>" class="btn-sm btn-primary">Save</button>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-md rounded font-sm hover-up" type="submit" onclick="validateAndSubmit()">Publish</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

<script>

    function validateAndSubmit() {
        if (validateForm()) {
            document.forms[0].submit();
        }
    }

    function viewImage(event, index) {
        let input = event.target;
        let reader = new FileReader();

        reader.onload = function() {
            let dataURL = reader.result;
            let image = document.getElementById("imgView" + index);
            image.src = dataURL;

            let cropper = new Cropper(image, {
                aspectRatio: 1,
                viewMode: 1,
                guides: true,
                background: false,
                autoCropArea: 1,
                zoomable: true
            });

            let cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
            cropperContainer.style.display = 'block';

            let saveButton = document.querySelector('#saveButton' + index);
            saveButton.addEventListener("click", async function() {
                let croppedCanvas = cropper.getCroppedCanvas();
                let croppedImage = document.getElementById("croppedImg" + index);
                croppedImage.src = croppedCanvas.toDataURL("image/jpeg", 1.0);

                let timestamp = new Date().getTime();
                let fileName = `cropped-img-${timestamp}-${index}.png`;

                await croppedCanvas.toBlob(blob => {
                    let imgFile = new File([blob], fileName, { type: 'image/png' });
                    const fileList = new DataTransfer();
                    fileList.items.add(imgFile);
                    input.files = fileList.files;
                });

                cropperContainer.style.display = 'none';
                cropper.destroy();
            });
        }
        reader.readAsDataURL(input.files[0]);
    }

    function clearErrorMessages() {
        document.querySelectorAll('.error-message').forEach(function(el) {
            el.innerHTML = '';
        });
    }

    function displayErrorMessage(id, message) {
        document.getElementById(id).innerHTML = message;
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName('productName')[0].value;
        const description = document.getElementById('descriptionid').value;
        const brand = document.getElementsByName('brand')[0].value;
        const price = document.getElementsByName('regularPrice')[0].value;
        const salePrice = document.getElementsByName('salePrice')[0].value;
        const color = document.getElementsByName('color')[0].value;
        const category = document.getElementsByName('category')[0].value;
        const quantity = document.getElementsByName('quantity')[0].value;
        const images = document.getElementById('input1').files;

        let isValid = true;

        if (name.trim() === "") {
            displayErrorMessage('productName-error', 'Please enter a product name.');
            isValid = false;
        }

        if (description.trim() === "") {
            displayErrorMessage('description-error', 'Please enter a description.');
            isValid = false;
        }

        if (brand.trim() === "") {
            displayErrorMessage('brand-error', 'Please select a brand.');
            isValid = false;
        }

        if (price.trim() === "") {
            displayErrorMessage('regularPrice-error', 'Please enter a regular price.');
            isValid = false;
        } else if (isNaN(price)) {
            displayErrorMessage('regularPrice-error', 'Regular price should be a numeric value.');
            isValid = false;
        }

        if (salePrice.trim() !== "" && isNaN(salePrice)) {
            displayErrorMessage('salePrice-error', 'Sale price should be a numeric value.');
            isValid = false;
        }

        if (color.trim() === "") {
            displayErrorMessage('color-error', 'Please enter a color.');
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(color.trim())) {
            displayErrorMessage('color-error', 'Color should contain only alphabetic characters.');
            isValid = false;
        }

        if (category.trim() === "") {
            displayErrorMessage('category-error', 'Please select a category.');
            isValid = false;
        }

        if (quantity.trim() === "") {
            displayErrorMessage('quantity-error', 'Please enter a quantity.');
            isValid = false;
        } else if (isNaN(quantity)) {
            displayErrorMessage('quantity-error', 'Quantity should be a numeric value.');
            isValid = false;
        }

        if (images.length === 0) {
            displayErrorMessage('images-error', 'Please upload at least one image.');
            isValid = false;
        }

        return isValid;
    }
</script>
<%- include("../../views/partials/admin/footer") %>
